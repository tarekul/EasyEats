{"version":3,"sources":["components/restList.js","components/Modal.js","services/services.js","services/firebase.js","containers/generationPage.js","components/Button.js","containers/home.js","containers/InfoForm.js","containers/pollPage.js","App.js","serviceWorker.js","index.js","components/logo.jpg"],"names":["List","props","categories","image_url","menu_url","name","price","react_default","a","createElement","Fragment","className","style","height","width","objectFit","src","alt","href","target","rel","paddingLeft","paddingRight","join","Modal","specHandleOnClick","handleOnChange","handleOnPollSubmit","votes","type","data-toggle","data-target","onClick","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","placeholder","value","onChange","parseYelpData","_ref","businesses","Promise","resolve","reject","Array","isArray","length","reduce","acc","e","i","alias","display_phone","phone","push","title","selectRandom","n","arr","randomArray","arguments","undefined","num","Math","floor","random","includes","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","GenerationPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnClick","generateRandomRestaurantList","generatePoll","state","trim","match","setState","firstNum","parseInt","defineProperty","getOptions","axios","method","url","concat","lat","lon","headers","Authorization","then","res","data","restaurants","localStorage","setItem","JSON","stringify","getOptions2","address","passedIn","randomRestaurants","display","redirect","_this$state","int","replace","firebase","database","ref","child","set","req_votes","total_votes","err","console","log","history","checkData","once","snapshot","val","catch","pageLoad","values","queryString","parse","location","search","ls","getItem","pageReloaded","store","temp","split","loc","_this$state2","map","key","restList","inputValue","Component","withRouter","goTo","Home","loading","geo","setTimeout","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","_this2","textAlign","marginRight","components_Button","InfoForm","handleChange","city","zip","handleInputChange","states","_React$createElement","_React$createElement2","logo","for","selected","React","PollPage","copySuccess","copyToClipboard","textArea","select","document","execCommand","focus","params","pp","ps","react_router","to","backgroundColor","textarea","readOnly","queryCommandSupported","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","react_router_dom","src_App","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d5c90fb1.chunk.js","sourcesContent":["import React from 'react';\n\nconst List = (props) => {\n    const { categories, image_url, menu_url, name, price, } = props;\n    return (\n        <>\n            <div className='row container' >\n                <div className='col-sm-12 col-md-2'>\n                    <img className='card-img' style={{ height: '100px', width: '100%', objectFit: 'cover' }} src={image_url} alt={name} />\n                </div>\n                <div className='card-header col' >\n                    <li className=\"list-group-item\">\n                        <div className='row justify-content-between'>\n                            <span className='col h4'>{name}</span>\n                            <a href={menu_url} target='_blank' className='col-sm-2' rel=\"noopener noreferrer\">Menu</a>\n                        </div>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <div className='row'>\n                            <div className='col col-xs-10'>\n                                <span  className='col h6' style={{paddingLeft: '2px', paddingRight: '2px'}}> {categories.join(', ')} </span>\n                            </div>\n                            {(price)? <span className='col-sm-2'>{price}</span>: <span className='col-sm-2'>--</span>}\n                        </div>\n                    </li>\n                </div>\n            </div>\n\n\n        </>\n\n    )\n}\nexport default List;","import React from 'react';\n\nexport default props => {\n    const { specHandleOnClick, handleOnChange, handleOnPollSubmit, votes } = props;\n    return (\n        <>\n            <button type='button' className=\"btn btn-outline-info\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\" style={{ width: '100%' }} onClick={specHandleOnClick} >\n                Create Poll\n            </button>\n\n\n            <div className=\"modal fade\" id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">Votes Required</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                        <input className=\"form-control\" type=\"text\" placeholder=\"2 votes or more\" value={votes} onChange={handleOnChange('votes')}/>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={handleOnPollSubmit('modal')}>Go Vote</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};","import axios from 'axios';\nconst yelpURL = 'https://api.yelp.com/v3/businesses/';\n\n\n\nconst get = (route) => {\n    if (typeof route !== 'string') return Promise.reject('Params were invalid; must be strings');\n    return axios({\n        url: yelpURL + route,\n        method: 'get',\n    });\n};\n\nconst getList = (lat, lon) => {\n    if(typeof lat !== 'string' || typeof lat !== 'string') return Promise.reject('Params were invalid; must be strings');\n    if (!lat.includes('.') || lon.includes('.')) return Promise.reject('lat & lon must be floating point numbers');\n    return axios({\n        url: yelpURL + 'search?term=restaurants&latitude=40.7429098&longitude=-73.9418147',\n        method: 'get',\n    });\n};\n\nconst parseYelpData = ( {businesses} ) => {\n    return new Promise( (resolve, reject) => {\n        if (!Array.isArray(businesses) || !businesses.length) return reject('Invalid data passed, Must be a yelp data response');\n        return resolve(\n            businesses.reduce( (acc, e, i) => {\n                const { name, alias,  display_phone, image_url, price, phone,} = e;\n                const categories = e.categories.reduce( (acc, e) => {\n                    acc.push(e.title)\n                    return acc;\n                    }, []);\n                acc.push({\n                    name,\n                    display_phone: display_phone || null,\n                    phone: phone || null,\n                    menu_url: 'https://www.yelp.com/menu/'+alias,\n                    image_url: image_url || null, \n                    price: price || null,\n                    categories\n                })\n                 return acc;\n            }, [])\n        )\n    });\n};\n\nconst randomArray = (n, length, arr =[]) => {\n    if (arr.length === n) {\n        return arr;\n    };\n    const num = Math.floor(Math.random() * length);\n    if (arr.includes(num)) {\n        return randomArray(n, length, arr);\n    } else {\n        arr.push(num);\n        return randomArray(n, length, arr);\n    };\n};\n\nconst selectRandom = (n, arr) => {\n    const randomNums = randomArray(n, arr.length);\n    return randomNums.reduce( (a, e) => {\n        a.push(arr[e])\n        return a;\n    }, []);\n };\n\nexport {\n    get,\n    getList,\n    parseYelpData,\n    selectRandom,\n}","import app from 'firebase/app';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyB6IU_v1uW_H1xso-2pP5EfcW1MCwQhOfA\",\n  authDomain: \"easyeats-a662b.firebaseapp.com\",\n  databaseURL: \"https://easyeats-a662b.firebaseio.com\",\n  projectId: \"easyeats-a662b\",\n  storageBucket: \"easyeats-a662b.appspot.com\",\n  messagingSenderId: \"38887412175\"\n};\n\napp.initializeApp(config);\n\nexport default app;","import React, { Component } from 'react';\nimport List from '../components/restList';\nimport Modal from '../components/Modal';\nimport { parseYelpData, selectRandom } from '../services/services';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport firebase from '../services/firebase';\n\nclass GenerationPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            lat: null,\n            lon: null,\n            restaurants: null,\n            display: null,\n            redirect: false,\n            votes: '',\n\n        }\n    }\n\n    handleOnClick = name => e => {\n        switch (name) {\n            case 'regen':\n                this.generateRandomRestaurantList();\n                break;\n            case 'create':\n                this.generatePoll();\n                break;\n            case 'modal':\n                const votes = this.state.votes.trim(); \n                if(!votes.match(/[0-9]/g)) {\n                    this.setState({\n                        votes: '',\n                    })\n                    return;\n                };\n                const firstNum = votes.match(/[0-9]/g)[0];\n                if (parseInt(firstNum) < 2) {\n                    this.setState({\n                        votes: '',\n                    })\n                    return;\n                };\n                this.generatePoll(firstNum);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    specHandleOnClick = e => {\n    }\n\n    handleOnChange = name => e => {\n        switch (name) {\n            case 'votes':\n                this.setState({ [name]: e.target.value })\n                break;\n            default:\n                return;\n        };\n    };\n\n    getOptions = () => {\n        axios({\n            method: 'GET',\n            url: `${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search?term=fastfood&latitude=${this.state.lat}&longitude=${this.state.lon}&limit=50`,\n            headers: {\n                Authorization: 'BEARER 7qhXzmc-qBs_nON-yV8qSFRDQOJkB9e5UYMVuyik8ySqoilGOlVAvGE7F31YxftS2nEMUkugJUlS7PyM-D0nnUuaxq3BOKUVH0aHZipZHx48RP-X31AVCYz1bX7EXHYx'\n            }\n        })\n            .then(res => parseYelpData(res.data))\n            .then(restaurants => this.setState({ restaurants }, () => {\n                localStorage.setItem('ee_restList', JSON.stringify(restaurants));\n                this.generateRandomRestaurantList();\n            }));\n    }\n    getOptions2 = (address) => {\n        axios({\n            method: 'GET',\n            url: `${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search?term=restaurants&location=${address}&limit=50`,\n            headers: {\n                Authorization: 'BEARER 7qhXzmc-qBs_nON-yV8qSFRDQOJkB9e5UYMVuyik8ySqoilGOlVAvGE7F31YxftS2nEMUkugJUlS7PyM-D0nnUuaxq3BOKUVH0aHZipZHx48RP-X31AVCYz1bX7EXHYx'\n            }\n        })\n            .then(res => parseYelpData(res.data))\n            .then(restaurants => this.setState({ restaurants }, () => {\n                localStorage.setItem('ee_restList', JSON.stringify(restaurants));\n                this.generateRandomRestaurantList();\n            }));\n    }\n\n    generateRandomRestaurantList = (passedIn = null) => {\n        const restaurants = passedIn || this.state.restaurants;\n        if (!restaurants) {\n            this.setState({ redirect: true })\n            return;\n        };\n        const randomRestaurants = selectRandom(4, restaurants);\n        if (passedIn) {\n            this.setState({\n                restaurants: passedIn,\n                display: randomRestaurants,\n            }, () => {\n                localStorage.setItem('ee_restDisplayList', JSON.stringify(randomRestaurants));\n            })\n        } else {\n            this.setState({\n                display: randomRestaurants,\n            }, () => {\n                localStorage.setItem('ee_restDisplayList', JSON.stringify(randomRestaurants));\n            })\n        }\n    }\n\n    generatePoll = () => {\n        const { display, votes } = this.state;\n        const id = display.reduce((acc, e, i) => {\n            const int = Math.floor(Math.random() * display[i].name.length)\n            acc += display[i].name[1] + display[i].name[0] + display[i].name[int]\n            return acc;\n        }, '').replace(/[^a-zA-Z0-9]/g, \"ee\")\n\n        const firebaseRef = firebase.database().ref('/polls');\n        firebaseRef.child(id).set({ data: display, req_votes: votes, total_votes: [0,0,0,0]}, err => {\n            if (err) {\n                console.log('FAILED TO WRITE TO FIREBASE')\n                return;\n            } else {\n                this.props.history.push(`/poll/${id}`)\n            }\n        });\n    };\n\n    checkData = (id) => {\n        const firebaseRef = firebase.database().ref('/polls/' + id);\n        firebaseRef.once('value')\n            .then(snapshot => {\n                console.log('snapshot: ', snapshot.val())\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    pageLoad = () => {\n        const values = queryString.parse(this.props.location.search)\n        if (!values.lat || !values.lon) {\n            const temp = this.props.location.search.split('=')[1];\n            const ls = (localStorage.getItem('ee_loc')) ? JSON.parse(localStorage.getItem('ee_loc')) : null;\n            if (ls) {\n                if (ls === temp) return this.pageReloaded();\n            }\n            const store = { loc: temp };\n            localStorage.setItem('ee_loc', JSON.stringify(store));\n            this.getOptions2(temp);\n        } else if (values.lat && values.lon) {\n            const ls = (localStorage.getItem('ee_latlon')) ? JSON.parse(localStorage.getItem('ee_latlon')) : null;\n            if (ls) {\n                if (values.lat === ls.lat && values.lon === ls.lon) return this.pageReloaded();\n            }\n            const store = { lat: values.lat, lon: values.lon };\n            localStorage.setItem('ee_latlon', JSON.stringify(store));\n            this.setState({ lat: values.lat, lon: values.lon }, () => {\n                this.getOptions()\n            })\n        } else {\n            this.setState({ redirect: true })\n            return;\n        }\n    }\n\n    pageReloaded = () => {\n        const restaurants = (localStorage.getItem('ee_restList')) ? JSON.parse(localStorage.getItem('ee_restList')) : null;\n        if (!restaurants) {\n            localStorage.setItem('ee_loc', JSON.stringify(null));\n            localStorage.setItem('ee_latlon', JSON.stringify(null));\n            this.pageLoad();\n            return;\n        }\n        const display = (localStorage.getItem('ee_restDisplayList')) ? JSON.parse(localStorage.getItem('ee_restDisplayList')) : null;\n        if (!display) {\n            this.generateRandomRestaurantList(restaurants);\n            return;\n        }\n        this.setState({\n            restaurants,\n            display,\n        });\n    }\n\n    componentDidMount() {\n        // const {lat , lon} = this.state\n        this.pageLoad();\n    }\n    \n    render() {\n        const { display, votes } = this.state\n        return (\n\n            <>\n                {\n                    (!display) ? (<div className=\"d-flex justify-content-center mt-5 pt-5\"><div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div></div>)\n                        :\n                        <div className='container'>\n                            {\n                                display.map((e, i) => {\n                                    return (\n                                        <div className='my-1' key={i}>\n                                            <List {...e} />\n                                        </div>\n                                    )\n                                })\n                            }\n                            <div className='container row my-1' >\n                                <div className='col-sm-12 my-1'>\n                                    <button type='button' className=\"btn btn-outline-info\" onClick={this.handleOnClick('regen')} style={{ width: '100%' }} >Generate New List</button>\n                                </div>\n                                <div className='col-sm-12 my-1'>\n                                    <Modal specHandleOnClick={this.specHandleOnClick} handleOnChange={this.handleOnChange} inputValue={votes} handleOnPollSubmit={this.handleOnClick} />\n                                    {/* <button type='button' className=\"btn btn-outline-info\" style={{ width: '100%' }} onClick={this.handleClick('create')} >Create Poll</button> */}\n                                </div>\n                            </div>\n                        </div>\n                }\n            </>\n        )\n    }\n}\n\nexport default GenerationPage ","import React from 'react'\nimport {withRouter} from 'react-router-dom'\n\n\nconst Button = (props) =>{\n    const {goTo,value, handleOnClick} = props  //goTo is the url to go to and value is the value of the button\n    return <button type=\"button\" className=\"btn btn-primary\" onClick={e=>{\n        if(value === 'My Location') handleOnClick()\n        props.history.push(goTo)}\n    }>{value}</button>\n}\n\nexport default withRouter(Button)","import React, {Component} from 'react'\nimport Button from '../components/Button'\n\n\nclass Home extends Component{\n    state = {\n        loading: null,\n    }\n\n    geo = () =>{\n        this.setState({\n            loading: true,\n        }, () => {\n            setTimeout( () => {\n                this.setState({\n                    loading: false,\n                })\n            }, 1500);\n        });\n       if(navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const {latitude,longitude} = position.coords\n                    console.log('latitude:' + latitude, 'Longitude:' + longitude)\n                    // this.setState({latitude:position.coords.latitude,longitude:position.coords.longitude},()=>{\n                    //     console.log(this.state)\n                    // })\n\n                    this.props.history.push(`/genpoll?lat=${latitude}&lon=${longitude}`)\n                })\n        }\n    }\n\n    // componentDidUpdate(pp, ps) {\n    //     console.log('previous state: ', ps)\n    //     console.log('current state: ', this.state);\n    // }\n\n    \n\n    render(){\n        return <>\n            <div className='container mt-5 jumbotron'>\n                <h2 style={{textAlign:'center'}}>EasyEats</h2>\n                <div style={{textAlign:'center'}}>\n                    <span style={{marginRight:'1%'}}><Button goTo='/' value='My Location' handleOnClick={e=>{this.geo()}}/></span>\n                    <Button goTo='/infopage' value='Enter Location' />\n                </div>\n                {(!this.state) ? (<div className=\"d-flex justify-content-center mt-5 pt-5\"><div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div></div>): <></>}\n            </div>\n        </>\n    }\n}\n\nexport default Home","import React from 'react';\nimport '../components/infoform.css'\nimport logo from '../components/logo.jpg';\n\n\nclass InfoForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            states:['Alabama','Alaska','American Samoa','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','District of Columbia','Federated States of Micronesia','Florida','Georgia','Guam','Hawaii','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Marshall Islands','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Northern Mariana Islands','Ohio','Oklahoma','Oregon','Palau','Pennsylvania','Puerto Rico','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virgin Island','Virginia','Washington','West Virginia','Wisconsin','Wyoming'],\n            address: null,\n            city: null,\n            state: null,\n            zip: null,\n        }\n    }\n    handleChange=(e)=>{\n        console.log(e.target.value)\n    }\n    handleOnClick=()=>{\n        //console.log(this.state)\n        const {address,city,zip,state} = this.state\n     this.props.history.push(`/genpoll?address=${address},${city},${state} ${zip}`)\n    }\n    handleInputChange=(e)=>{\n        this.setState({[e.target.name]:e.target.value})\n    }\n    render(){\n        const {states}=this.state\n        return (\n            <>\n            <form>\n             <div className='image'>\n                <img src={logo}/>\n            </div>\n            <div className = 'col-5 '>\n            <div className=\"form-group\">\n                <label for=\"inputAddress\">Address</label>\n                <input type=\"text\"  onChange={e=>this.handleInputChange(e)} name=\"address\" className=\"form-control\" id=\"validationCustom01\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                <label for=\"inputCity\">City</label>\n                <input type=\"text\" onChange={e=>this.handleInputChange(e)} name=\"city\" className=\"form-control\" id=\"inputCity\" />\n                </div>\n                <div className=\"form-group col-md-4\">\n                <label for=\"inputState\">State</label>\n                <select onChange={this.handleChange} id=\"inputState\" onChange={e=>this.handleInputChange(e)} name=\"state\" class=\"form-control\">\n                    <option selected>Choose...</option>\n                    {\n                        states.map((e,i)=>{\n                            return(<option key={i} value={e}>{e}</option>)\n                        })\n                    }\n                </select>\n                </div>\n                <div className=\"form-group col-md-2\">\n                <label for=\"inputZip\">Zip</label>\n                <input type=\"text\" onChange={e=>this.handleInputChange(e)} name=\"zip\" className=\"form-control\" id=\"inputZip\" />\n                </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-info\" onClick={this.handleOnClick}>Enter</button>\n             </div>\n            </form>\n            </>\n        )\n    }\n}\n\nexport default InfoForm;","import React, { Component } from 'react'\nimport List from '../components/restList'\nimport { Redirect } from 'react-router-dom'\nimport firebase from '../services/firebase';\n\n\nclass PollPage extends Component {\n\n    state = {\n        id: null,\n        redirect: false,\n        restaurants: null,\n        req_votes: null,\n        total_votes: null,\n        copySuccess: '',\n    }\n\n    checkData = (id) => {\n        const firebaseRef = firebase.database().ref('/polls/' + id);\n        firebaseRef.once('value')\n            .then(snapshot => {\n                return snapshot.val()\n            })\n            .then((data) => {\n                if (!data) {\n                    this.setState({\n                        redirect: true,\n                    });\n                } else {\n                    this.setState({\n                        id,\n                        restaurants: data.data,\n                        req_votes: data.req_votes,\n                        total_votes: data.total_votes,\n                    });\n                }\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    copyToClipboard = (e) => {\n        this.textArea.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the the whole text area selected.\n        e.target.focus();\n        this.setState({ copySuccess: 'Copied!' });\n    };\n\n    componentDidMount() {\n        const { id } = this.props.match.params || null;\n        if (!id) {\n            this.setState({\n                redirect: true,\n            })\n        } else {\n            this.checkData(id);\n        }\n    }\n\n    componentDidUpdate(pp, ps) {\n        console.log(this.state)\n    }\n    render() {\n        const { id, redirect, restaurants, req_votes } = this.state;\n        return (\n            <>\n                {\n                    (redirect) ? <Redirect to='/' />\n                        :\n                        (restaurants) ?\n                            <div className=\"\">\n                                <div className='row'>\n                                    <div className='col-sm-12 col-md-6 row'>\n                                        {/* <input className=\"form-control\" type=\"text\"  value={'http://localhost:3000/#/poll/'+id} disabled/> */}\n                                        {/* <span className=\"input-group-text col-sm-8\" id=\"basic-addon3\">{'http://localhost:3000/#/poll/' + id}</span> */}\n                                        <form className='col col-sm-8'\n                                        style={{height: '0px', width: '0px', backgroundColor: 'grey'}}>\n                                            <textarea\n                                                style={{height: '0px', width: '0px', backgroundColor: 'grey'}}\n                                                ref={(textarea) => this.textArea = textarea}\n                                                value={'http://localhost:3000/#/poll/' + id}\n                                                readOnly={true}\n                                            />\n                                        </form>\n                                        {\n                                            /* Logical shortcut for only displaying the \n                                               button if the copy command exists */\n                                            document.queryCommandSupported('copy') &&\n                                            <div className='col-sm-4'>\n                                                <button className='btn btn-outline-info col-sm-12' onClick={this.copyToClipboard}>Copy Url</button>\n                                                {this.state.copySuccess}\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                                <div className='row'>\n                                    <div className='col col-11 mr-0 pr-0'>\n                                        {\n                                            restaurants.map((e, i) => {\n                                                return (\n                                                    <div className='my-1' key={i}>\n                                                        <List {...e} />\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n                                    <div className='col col-1 my-1 mx-0 p-2'>\n                                        {\n                                            [1, 2, 3, 4].map((e, i) => {\n                                                return <div style={{ backgroundColor: 'red', height: '10px' }} key={i}></div>\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                            :\n                            <div className=\"d-flex justify-content-center mt-5 pt-5\"><div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div></div>\n                }\n            </>\n        )\n    }\n}\n\nexport default PollPage ","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom'\n\nimport { Home, GenerationPage, InfoForm, PollPage } from './containers/'\n\nclass App extends Component{\n  render(){\n    return <>\n    {/* <PollPage/> */}\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/infopage' exact component={InfoForm} />\n        <Route path='/genpoll' component={GenerationPage} />\n        <Route path='/poll/:id' component={PollPage} />\n      </Switch>\n    </>\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.adb37c85.jpg\";"],"sourceRoot":""}